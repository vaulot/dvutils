% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metapr2.R
\name{metapr2_export_asv}
\alias{metapr2_export_asv}
\title{Exports the metapr2 database}
\usage{
metapr2_export_asv(
  gene = "",
  taxo_level = domain,
  taxo_name = "Eukaryota",
  boot_level = class_boot,
  boot_min = 0,
  assigned_with = "dada2",
  reference_database = "pr2_5.1.0",
  directory = "C:/daniel.vaulot@gmail.com/Databases/_metaPR2/export/",
  dataset_id_selected = c(1:500),
  need_accession = TRUE,
  filter_samples = NULL,
  filter_metadata = NULL,
  export_long_xls = FALSE,
  export_wide_xls = FALSE,
  export_sample_xls = FALSE,
  export_phyloseq = FALSE,
  export_fasta = FALSE,
  export_fasta_sum_reads = FALSE,
  taxonomy_full = TRUE,
  use_hash = FALSE,
  sum_reads_min = 0,
  sample_reads_min = 1000
)
}
\arguments{
\item{gene}{if left empty "" then the whole sequence is exported, if "LSU" or "SSU" look in barrnap table to extract seqence}

\item{taxo_level}{The taxonomic level for selection (do not quote), e.g. class or genus}

\item{taxo_name}{The name of the taxonomic level selected, e.g. "Chlorophyta", can be a vector c("Chlorophyta", "Haptophyta")}

\item{boot_level}{The taxonomic level for bootstrap filtering (do not quote), e.g. class_boot or genus_boot}

\item{boot_min}{Minimum bootstrap value at the class level, 0 if you want to get all asvs}

\item{assigned_with}{Program used for assignement - "dada2" or "decipher"}

\item{reference_database}{Reference database used - "pr2_4.14.0" or "pr2_4.12.0"}

\item{directory}{Directory where the files are saved (finish with /)}

\item{dataset_id_selected}{Integer vector, e.g. 23 or c(21, 23) or 21:23}

\item{need_accession}{If TRUE, only samples with NCBI_SRA_accession not NULL are exported (this can be NA if not available)}

\item{filter_samples}{Character expression for filter, e.g. "DNA_RNA == 'DNA'" (use single quotes inside double quotes)}

\item{filter_metadata}{Character expression for filter, e.g. "substrate == 'sediment trap material'" (use single quotes inside double quotes)}

\item{export_long_xls}{If TRUE, an xlsx file is produced containing the final long data frame}

\item{export_wide_xls}{If TRUE, an xlsx file is produced containing the final wide data frame}

\item{export_sample_xls}{If TRUE, an xlsx file is produced containing the sample list}

\item{export_phyloseq}{If TRUE, a phyloseq file is produced and a phyloseq object producted}

\item{export_fasta}{If TRUE, a fasta is produced}

\item{export_fasta_sum_reads}{If TRUE, sum of reads of ASV is added to FASTA file following the VSEARCH format}

\item{taxonomy_full}{If TRUE, the fasta file contains the full taxonomy (8 levels), if false only contains the species}

\item{use_hash}{If TRUE, the asvs with identical has will be merged and called by their hash value (sequence_hash)}

\item{sum_reads_min}{This is the minimum number of reads (summed over the datasets selected) for an asv to be included}

\item{sample_reads_min}{This is the minimum number of reads for a sample to be included}
}
\value{
A list with 4 elements
}
\description{
Exports a range of file and format.
\itemize{
\item fasta file with the full taxonomy or just the genus level
\item excel file with the full table of the asv and metadata
\item phyloseq file (better when only selecting a single data set)
\item list of samples with metadata
}

Returns a list with 4 elements
\itemize{
\item df = dataframe with all the asv and the stations and read numbers
\item ps = phyloseq object  - if phyloseq = TRUE
\item fasta = df with 2 columns seq_name and sequence
\item samples= sample_list (list of sammples with metadata)
}

NOTE: if all export_long_xls, export_wide_xls, export_phyloseq are false, abundances are not exported
}
\examples{
# Export all the asv in a single fasta
  metapr2_export_asv()

# Export as specific data set as a phyloseq file
  metapr2_export_asv(dataset_id_selected = 23, export_phyloseq = TRUE)

# Export a specific genus as a fasta file and an excel file
  asv_set <- metapr2_export_asv(taxo_level = genus, taxo_name=c("Pseudohaptolina","Haptolina"),
                                export_fasta=TRUE, taxonomy_full= FALSE,
                                boot_level = genus_boot, boot_min = 100,
                                export_long_xls = TRUE)
}
